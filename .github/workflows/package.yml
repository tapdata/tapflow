name: Package Binaries

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  # 二进制文件构建任务
  build-and-publish:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
          - os: macos-latest
            platform: darwin
            arch: x86_64
          - os: windows-latest
            platform: windows
            arch: x86_64

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的历史记录，包括所有标签

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: x64

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          else
            if [[ "$RUNNER_OS" == "Windows" ]]; then
              powershell -Command "Write-Output \"VERSION=$((git describe --tags | Select-String -Pattern '^v\d+\.\d+\.\d+' | ForEach-Object { $_.Matches[0].Value.Substring(1) }) ?? '0.0.0')\"" >> $GITHUB_ENV
            else
              VERSION=$(git describe --tags | grep -o '^v[0-9]\+\.[0-9]\+\.[0-9]\+' | sed 's/^v//' || echo '0.0.0')
              echo "VERSION=$VERSION" >> $GITHUB_ENV
            fi
          fi
        shell: bash

      - name: Install make (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install make
          
      - name: Build binary
        shell: bash
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          make clean setup current

      - name: Generate checksum (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          cd dist
          sha256sum * > SHA256SUMS.linux.txt

      - name: Generate checksum (macOS)
        if: runner.os == 'Darwin'
        shell: bash
        run: |
          cd dist
          for file in *; do
            if [ -f "$file" ] && [ "$file" != "SHA256SUMS.darwin.txt" ]; then
              shasum -a 256 "$file" >> SHA256SUMS.darwin.txt
            fi
          done

      - name: Generate checksum (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd dist
          Get-ChildItem -File | ForEach-Object {
            $hash = (Get-FileHash -Algorithm SHA256 $_.Name).Hash.ToLower()
            "$hash  $($_.Name)" | Out-File -Append -Encoding utf8 SHA256SUMS.windows.txt
          }

      - name: Fix line endings (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd dist
          (Get-Content SHA256SUMS.windows.txt) | Set-Content -Encoding utf8 SHA256SUMS.windows.txt

      - name: Install rsync (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          choco install rsync

      - name: Deploy to rsync server (Unix)
        if: runner.os != 'Windows'
        shell: bash
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          echo '${{ secrets.RSYNC_PASSWORD }}' > /tmp/rsync.passwd && chmod 600 /tmp/rsync.passwd
          rsync --password-file=/tmp/rsync.passwd -vzrt --progress dist/ "rsync://${{ secrets.RSYNC_USER }}@${{ secrets.RSYNC_HOST }}/data/enterprise-artifact/gz/tapflow/${{ env.VERSION }}/" || true

      - name: Deploy to rsync server (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        env:
          VERSION: ${{ env.VERSION }}
          RSYNC_PASSWORD: ${{ secrets.RSYNC_PASSWORD }}
        run: |
          $env:RSYNC_PASSWORD | Out-File -FilePath "$env:TEMP\rsync.passwd" -Encoding ASCII
          rsync --password-file="$env:TEMP\rsync.passwd" -vzrt --progress dist/ "rsync://${{ secrets.RSYNC_USER }}@${{ secrets.RSYNC_HOST }}/data/enterprise-artifact/gz/tapflow/${{ env.VERSION }}/" || exit 0 
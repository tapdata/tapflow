name: Package Binaries

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发
  workflow_dispatch:  # 允许手动触发

jobs:
  # 二进制文件构建任务
  build-binaries:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x86_64
            ext: ""
          - os: macos-latest
            platform: darwin
            arch: x86_64
            ext: ""

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          architecture: x64

      - name: Extract version from tag
        id: get_version
        shell: bash
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          else
            echo "VERSION=latest" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create config directory (Unix)
        run: mkdir -p ~/.tapflow

      - name: Build binary
        run: |
          python -m PyInstaller \
            --clean \
            --name tapflow-${{ env.VERSION }}-${{ matrix.platform }}-${{ matrix.arch }} \
            --add-data "requirements.txt:." \
            --add-data "README.md:." \
            --add-data "tapflow/cli/cli.py:tapflow/cli" \
            --add-data "etc:etc" \
            --add-data "tapflow:tapflow" \
            --hidden-import tapflow \
            --hidden-import tapflow.cli \
            --hidden-import tapflow.cli.cli \
            --hidden-import tapflow.cli.tap \
            --hidden-import tapflow.lib \
            --hidden-import tapflow.lib.configuration \
            --hidden-import tapflow.lib.configuration.config \
            --hidden-import tapflow.lib.backend_apis \
            --hidden-import tapflow.lib.data_pipeline \
            --hidden-import tapflow.lib.connections \
            --hidden-import tapflow.lib.utils \
            --hidden-import tapflow.lib.params \
            --hidden-import tapflow.lib.data_pipeline.validation \
            --hidden-import tapflow.lib.data_services \
            --hidden-import tapflow.lib.system \
            --hidden-import tapflow.lib.cache \
            --hidden-import tapflow.lib.backend_apis.common \
            --hidden-import tapflow.lib.backend_apis.connections \
            --hidden-import tapflow.lib.backend_apis.task \
            --hidden-import tapflow.lib.backend_apis.dataVerify \
            --hidden-import tapflow.lib.backend_apis.metadataInstance \
            --hidden-import tapflow.lib.backend_apis.apiServers \
            --hidden-import IPython \
            --hidden-import yaml \
            --hidden-import requests \
            --hidden-import websockets \
            --hidden-import bson \
            --hidden-import urllib \
            --hidden-import traitlets \
            --hidden-import importlib.metadata \
            --hidden-import logging \
            --hidden-import email \
            --hidden-import xml \
            --hidden-import http \
            --hidden-import ctypes \
            --hidden-import multiprocessing \
            --hidden-import dateutil \
            --hidden-import json \
            --hidden-import asyncio \
            --hidden-import concurrent.futures \
            --hidden-import idna \
            --hidden-import urllib3 \
            --hidden-import charset_normalizer \
            --log-level ERROR \
            --onefile \
            tapflow/cli/tap.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/*${{ matrix.ext }}
          retention-days: 1

  # 发布二进制文件到服务器任务
  publish-binaries:
    needs: [build-binaries]
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Install rsync
        run: sudo apt-get install -y rsync

      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=latest" >> $GITHUB_OUTPUT
          fi

      - name: Prepare artifacts for upload
        run: |
          mkdir -p upload
          # 显示当前目录结构以便调试
          echo "Current directory structure:"
          ls -R dist/
          # 直接复制 dist 目录下的所有文件
          cp -r dist/*/* upload/ || cp -r dist/* upload/
          cd upload
          # 确保目录不为空再生成校验和
          if [ "$(ls -A)" ]; then
            sha256sum * > SHA256SUMS.txt
          else
            echo "Error: No files found to generate checksums"
            exit 1
          fi

      - name: Upload to server via rsync
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          echo '${{ secrets.RSYNC_PASSWORD }}' > /tmp/rsync_password && chmod 600 /tmp/rsync_password
          mkdir -p /tmp/rsync_temp
          rsync --password-file=/tmp/rsync_password -vzrt --chmod=Du=rwx,Dg=rx,Do=rx,Fu=rw,Fg=r,Fo=r --temp-dir=/tmp/rsync_temp --progress upload/ "rsync://${{ secrets.RSYNC_HOST }}/data/enterprise-artifact/gz/tapflow/${{ env.VERSION }}/" || [[ $? -eq 23 ]] || exit $? 